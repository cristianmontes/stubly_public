{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../../services/mock.service\";\nimport * as i3 from \"@angular/common\";\nfunction MockListComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1, \" No has creado mocks a\\u00FAn. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MockListComponent_ul_6_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 9)(1, \"div\", 10)(2, \"strong\");\n    i0.ɵɵtext(3, \"Method: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵelementStart(5, \"strong\");\n    i0.ɵɵtext(6, \"Path: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"pre\", 11);\n    i0.ɵɵtext(9);\n    i0.ɵɵpipe(10, \"json\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function MockListComponent_ul_6_li_1_Template_button_click_11_listener() {\n      const mock_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.probarMock(mock_r2));\n    });\n    i0.ɵɵtext(12, \" Probar Mock \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const mock_r2 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", mock_r2.method, \" - \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(mock_r2.path);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(10, 3, mock_r2.response));\n  }\n}\nfunction MockListComponent_ul_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 7);\n    i0.ɵɵtemplate(1, MockListComponent_ul_6_li_1_Template, 13, 5, \"li\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.mocks);\n  }\n}\nfunction MockListComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"div\", 14)(2, \"div\")(3, \"h3\", 10);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 15);\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"date\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function MockListComponent_div_7_Template_button_click_8_listener() {\n      const mock_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.probarMock(mock_r5));\n    });\n    i0.ɵɵtext(9, \" Probar Mock \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 17)(11, \"p\", 18);\n    i0.ɵɵtext(12, \"Puedes usar este comando cURL:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"code\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const mock_r5 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate2(\"\", mock_r5.method, \" \", mock_r5.path, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Creado el \", i0.ɵɵpipeBind2(7, 5, mock_r5.created_at, \"short\"), \"\");\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate2(\" curl -X \", mock_r5.method, \" \", ctx_r2.apiBaseUrl + mock_r5.path, \" \");\n  }\n}\nexport let MockListComponent = /*#__PURE__*/(() => {\n  class MockListComponent {\n    http;\n    mockService;\n    mocks = [];\n    token = localStorage.getItem('stubly_token');\n    apiBaseUrl = 'https://stubly-backend.onrender.com'; // o tu dominio actual\n    constructor(http, mockService) {\n      this.http = http;\n      this.mockService = mockService;\n    }\n    ngOnInit() {\n      console.log(\"Token:\" + this.token);\n      if (this.token) {\n        this.mockService.getMocksByToken(this.token).subscribe({\n          next: data => {\n            this.mocks = data;\n          },\n          error: err => console.error('Error al cargar mocks', err)\n        });\n      }\n    }\n    probarMock(mock) {\n      window.open(this.apiBaseUrl + mock.path, '_blank');\n    }\n    static ɵfac = function MockListComponent_Factory(t) {\n      return new (t || MockListComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.MockService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: MockListComponent,\n      selectors: [[\"app-mock-list\"]],\n      decls: 8,\n      vars: 4,\n      consts: [[1, \"max-w-4xl\", \"mx-auto\", \"p-6\", \"bg-white\", \"shadow-md\", \"rounded-xl\", \"mt-6\"], [1, \"text-2xl\", \"font-semibold\", \"text-gray-800\", \"mb-6\"], [1, \"text-sm\", \"text-gray-500\"], [\"class\", \"text-gray-500 text-center py-8\", 4, \"ngIf\"], [\"class\", \"space-y-4\", 4, \"ngIf\"], [\"class\", \"mock-card\", 4, \"ngFor\", \"ngForOf\"], [1, \"text-gray-500\", \"text-center\", \"py-8\"], [1, \"space-y-4\"], [\"class\", \"border border-gray-200 rounded-lg p-5 shadow-sm\", 4, \"ngFor\", \"ngForOf\"], [1, \"border\", \"border-gray-200\", \"rounded-lg\", \"p-5\", \"shadow-sm\"], [1, \"font-medium\", \"text-indigo-700\"], [1, \"text-xs\", \"bg-gray-50\", \"p-2\", \"mt-2\", \"rounded\", \"text-gray-700\"], [1, \"px-6\", \"py-2\", \"rounded\", \"text-white\", \"font-medium\", \"transition\", \"bg-cyan-600\", \"hover:bg-cyan-700\", \"disabled:bg-gray-300\", \"disabled:cursor-not-allowed\", \"disabled:text-gray-500\", \"cursor-pointer\", 3, \"click\"], [1, \"mock-card\"], [1, \"flex\", \"justify-between\", \"items-center\", \"mb-2\"], [1, \"text-gray-600\", \"text-sm\"], [1, \"bg-cyan-600\", \"hover:bg-cyan-700\", \"text-white\", \"px-3\", \"py-1\", \"rounded\", \"text-sm\", 3, \"click\"], [1, \"bg-gray-100\", \"p-2\", \"rounded\", \"text-sm\", \"font-mono\", \"overflow-x-auto\", \"text-gray-800\", \"mb-4\"], [1, \"mb-1\", \"font-medium\", \"text-gray-700\"]],\n      template: function MockListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"section\", 0)(1, \"h2\", 1);\n          i0.ɵɵtext(2, \"Tus Mocks\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"p\", 2);\n          i0.ɵɵtext(4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(5, MockListComponent_div_5_Template, 2, 0, \"div\", 3)(6, MockListComponent_ul_6_Template, 2, 1, \"ul\", 4)(7, MockListComponent_div_7_Template, 15, 8, \"div\", 5);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\"Total: \", ctx.mocks.length, \"\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.mocks.length === 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.mocks.length > 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngForOf\", ctx.mocks);\n        }\n      },\n      dependencies: [i3.NgForOf, i3.NgIf, i3.JsonPipe, i3.DatePipe],\n      encapsulation: 2\n    });\n  }\n  return MockListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}