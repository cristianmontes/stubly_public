{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet MockBuilderComponent = class MockBuilderComponent {\n  fb;\n  mockService;\n  token;\n  mockForm;\n  nuevoMock = {\n    method: 'GET',\n    path: '',\n    response: '{ \"mensaje\": \"respuesta de ejemplo\" }'\n  };\n  apiBaseUrl = 'http://localhost:3000/v1/mock/'; // o tu dominio actual\n  mockCreado = null;\n  respuestaMock = null;\n  alerta = null;\n  constructor(fb, mockService) {\n    this.fb = fb;\n    this.mockService = mockService;\n    this.mockForm = this.fb.group({\n      method: ['', Validators.required],\n      path: ['', Validators.required],\n      response: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    const tokenKey = 'stubly_token';\n    let token = localStorage.getItem(tokenKey);\n    if (!token) {\n      token = crypto.randomUUID();\n      localStorage.setItem(tokenKey, token);\n    }\n    this.token = token;\n  }\n  crearMock() {\n    this.respuestaMock = null;\n    const raw = this.mockForm.value;\n    try {\n      const payload = {\n        method: raw.method,\n        path: raw.path,\n        response: JSON.parse(raw.response)\n      };\n      this.mockService.createMock(payload, this.token).subscribe(data => {\n        this.mockCreado = data;\n        this.nuevoMock = {\n          method: 'GET',\n          path: '',\n          response: '{ \"mensaje\": \"respuesta de ejemplo\" }'\n        };\n      });\n    } catch (e) {\n      //alert(\"Respuesta no es un JSON válido.\");\n      this.alerta = {\n        tipo: 'error',\n        mensaje: 'El campo Respuesta no es un JSON válido.'\n      };\n      return;\n    }\n    this.alerta = {\n      tipo: 'success',\n      mensaje: 'Mock creado correctamente'\n    };\n  }\n  probarMock() {\n    this.respuestaMock = this.mockCreado.response;\n  }\n};\nMockBuilderComponent = __decorate([Component({\n  selector: 'app-mock-builder',\n  templateUrl: './mock-builder.component.html'\n})], MockBuilderComponent);\nexport { MockBuilderComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}