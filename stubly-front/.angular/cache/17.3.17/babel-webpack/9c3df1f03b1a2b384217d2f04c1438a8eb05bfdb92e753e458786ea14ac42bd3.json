{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nfunction MockListComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtext(1, \" No has creado mocks a\\u00FAn.\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MockListComponent_ul_3_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 6)(1, \"div\")(2, \"strong\");\n    i0.ɵɵtext(3, \"M\\u00E9todo:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\")(6, \"strong\");\n    i0.ɵɵtext(7, \"Ruta:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\")(10, \"strong\");\n    i0.ɵɵtext(11, \"Delay:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 7);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const mock_r1 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", mock_r1.method, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", mock_r1.path, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", mock_r1.delay || 0, \"ms\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"ID: \", mock_r1._id, \"\");\n  }\n}\nfunction MockListComponent_ul_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 4);\n    i0.ɵɵtemplate(1, MockListComponent_ul_3_li_1_Template, 15, 4, \"li\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.mocks);\n  }\n}\nexport let MockListComponent = /*#__PURE__*/(() => {\n  class MockListComponent {\n    http;\n    mocks = [];\n    token = localStorage.getItem('stubly_token');\n    constructor(http) {\n      this.http = http;\n    }\n    ngOnInit() {\n      if (this.token) {\n        this.http.get(`/api/mocks/by-token/${this.token}`).subscribe({\n          next: data => this.mocks = data,\n          error: err => console.error('Error al cargar mocks', err)\n        });\n      }\n    }\n    static ɵfac = function MockListComponent_Factory(t) {\n      return new (t || MockListComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: MockListComponent,\n      selectors: [[\"app-mock-list\"]],\n      decls: 4,\n      vars: 2,\n      consts: [[1, \"text-xl\", \"font-bold\", \"mb-4\"], [\"class\", \"text-gray-500\", 4, \"ngIf\"], [\"class\", \"space-y-3\", 4, \"ngIf\"], [1, \"text-gray-500\"], [1, \"space-y-3\"], [\"class\", \"bg-gray-100 p-4 rounded\", 4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-100\", \"p-4\", \"rounded\"], [1, \"text-xs\", \"text-gray-600\", \"mt-2\"]],\n      template: function MockListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\", 0);\n          i0.ɵɵtext(1, \"Tus Mocks\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(2, MockListComponent_div_2_Template, 2, 0, \"div\", 1)(3, MockListComponent_ul_3_Template, 2, 1, \"ul\", 2);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.mocks.length === 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.mocks.length > 0);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n  return MockListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}