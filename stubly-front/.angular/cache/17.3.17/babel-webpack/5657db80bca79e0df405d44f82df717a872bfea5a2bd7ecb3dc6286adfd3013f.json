{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/mock.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = (a0, a1, a2) => ({\n  \"bg-green-100 text-green-800\": a0,\n  \"bg-red-100 text-red-800\": a1,\n  \"bg-blue-100 text-blue-800\": a2\n});\nfunction MockBuilderComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(2, _c0, ctx_r0.alerta.tipo === \"success\", ctx_r0.alerta.tipo === \"error\", ctx_r0.alerta.tipo === \"info\"));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.alerta.mensaje, \"\\n\");\n  }\n}\nfunction MockBuilderComponent_div_23_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"json\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, ctx_r0.respuestaMock), \" \");\n  }\n}\nfunction MockBuilderComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"h3\", 16);\n    i0.ɵɵtext(2, \"Mock creado:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\", 17);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 17);\n    i0.ɵɵtext(6, \"Ruta: \");\n    i0.ɵɵelementStart(7, \"code\", 18);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"p\", 19);\n    i0.ɵɵtext(10, \"Respuesta simulada:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"pre\", 20);\n    i0.ɵɵtext(12);\n    i0.ɵɵpipe(13, \"json\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 21)(15, \"p\", 22);\n    i0.ɵɵtext(16, \"Puedes usar este comando cURL:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"code\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function MockBuilderComponent_div_23_Template_button_click_19_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.probarMock());\n    });\n    i0.ɵɵtext(20, \" Probar Mock \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(21, MockBuilderComponent_div_23_div_21_Template, 3, 3, \"div\", 24);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"M\\u00E9todo: \", ctx_r0.mockCreado.method, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.mockCreado.path);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(13, 6, ctx_r0.mockCreado.response));\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate2(\" curl -X \", ctx_r0.mockCreado.method, \" \", ctx_r0.apiBaseUrl + ctx_r0.mockCreado.path, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.respuestaMock);\n  }\n}\nexport let MockBuilderComponent = /*#__PURE__*/(() => {\n  class MockBuilderComponent {\n    fb;\n    mockService;\n    router;\n    token;\n    mockForm;\n    nuevoMock = {\n      method: 'GET',\n      path: '',\n      response: '{ \"mensaje\": \"respuesta de ejemplo\" }',\n      name: ''\n    };\n    apiBaseUrl = 'http://localhost:3000/v1/mock/'; // o tu dominio actual\n    mockCreado = null;\n    respuestaMock = null;\n    alerta = null;\n    constructor(fb, mockService, router) {\n      this.fb = fb;\n      this.mockService = mockService;\n      this.router = router;\n      this.mockForm = this.fb.group({\n        method: ['', Validators.required],\n        path: ['', Validators.required],\n        response: ['', Validators.required],\n        name: ['', Validators.required]\n      });\n    }\n    ngOnInit() {\n      const tokenKey = 'stubly_token';\n      let token = localStorage.getItem(tokenKey);\n      if (!token) {\n        token = crypto.randomUUID();\n        localStorage.setItem(tokenKey, token);\n      }\n      this.token = token;\n    }\n    crearMock() {\n      if (!this.validarTamañoResponse()) {\n        this.alerta = {\n          tipo: 'error',\n          mensaje: 'La respuesta JSON excede los 10 mil caracteres permitidos.'\n        };\n        return;\n      }\n      this.respuestaMock = null;\n      const raw = this.mockForm.value;\n      try {\n        const payload = {\n          method: raw.method,\n          path: raw.path,\n          response: JSON.parse(raw.response),\n          name: raw.name\n        };\n        this.mockService.createMock(payload, this.token).subscribe(data => {\n          this.mockCreado = data;\n          this.nuevoMock = {\n            method: 'GET',\n            path: '',\n            response: '{ \"mensaje\": \"respuesta de ejemplo\" }',\n            name: ''\n          };\n        });\n        this.mockService.createMock(payload, this.token).subscribe({\n          next: data => {\n            this.mockCreado = data;\n            this.nuevoMock = {\n              method: 'GET',\n              path: '',\n              response: '{ \"mensaje\": \"respuesta de ejemplo\" }',\n              name: ''\n            };\n          },\n          error: error => {\n            console.error('Error al crear el mock:', error);\n            // Puedes mostrar una alerta visual también:\n            this.alerta = {\n              tipo: 'error',\n              mensaje: error.error?.error || 'Error inesperado al crear el mock'\n            };\n          }\n        });\n      } catch (e) {\n        //alert(\"Respuesta no es un JSON válido.\");\n        this.alerta = {\n          tipo: 'error',\n          mensaje: 'El campo Respuesta no es un JSON válido.'\n        };\n        return;\n      }\n      this.alerta = {\n        tipo: 'success',\n        mensaje: 'Mock creado correctamente'\n      };\n    }\n    probarMock() {\n      this.respuestaMock = this.mockCreado.response;\n    }\n    irALista() {\n      this.router.navigate(['/mis-mocks']); // Ajusta la ruta según tu app\n    }\n    validarTamañoResponse() {\n      const texto = typeof this.nuevoMock.response === 'string' ? this.nuevoMock.response : JSON.stringify(this.nuevoMock.response);\n      const sizeInBytes = new TextEncoder().encode(texto).length;\n      console.log(\"tamaño de json \" + sizeInBytes);\n      return sizeInBytes <= 10000; // 1024 caracteres aprox\n    }\n    static ɵfac = function MockBuilderComponent_Factory(t) {\n      return new (t || MockBuilderComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.MockService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: MockBuilderComponent,\n      selectors: [[\"app-mock-builder\"]],\n      decls: 24,\n      vars: 9,\n      consts: [[1, \"max-w-3xl\", \"mx-auto\", \"p-6\", \"bg-white\", \"shadow\", \"rounded-xl\"], [1, \"text-xl\", \"font-bold\", \"text-slate-800\", \"mb-4\"], [1, \"space-y-4\", 3, \"ngSubmit\", \"formGroup\"], [1, \"flex\", \"flex-col\", \"sm:flex-row\", \"gap-4\"], [\"type\", \"text\", \"formControlName\", \"name\", \"placeholder\", \"Nombre\", \"maxlength\", \"100\", \"required\", \"\", 1, \"border\", \"p-2\", \"rounded\", \"w-full\", 3, \"ngModelChange\", \"ngModel\"], [\"formControlName\", \"method\", 1, \"border\", \"p-2\", \"rounded\", \"w-full\", \"sm:w-1/4\", 3, \"ngModelChange\", \"ngModel\"], [\"disabled\", \"\"], [\"type\", \"text\", \"formControlName\", \"path\", \"placeholder\", \"/ruta (Sin espacios en blanco)\", \"maxlength\", \"250\", \"required\", \"\", 1, \"border\", \"p-2\", \"rounded\", \"w-full\", 3, \"ngModelChange\", \"ngModel\"], [\"formControlName\", \"response\", \"rows\", \"6\", \"placeholder\", \"{ \\\"mensaje\\\": \\\"respuesta de ejemplo\\\" }\", 1, \"border\", \"p-2\", \"rounded\", \"w-full\", \"font-mono\", 3, \"ngModelChange\", \"ngModel\"], [1, \"flex\", \"justify-between\", \"items-center\"], [\"type\", \"submit\", 1, \"px-6\", \"py-2\", \"rounded\", \"text-white\", \"font-medium\", \"transition\", \"bg-cyan-600\", \"hover:bg-cyan-700\", \"disabled:bg-gray-300\", \"disabled:cursor-not-allowed\", \"disabled:text-gray-500\", \"cursor-pointer\", 3, \"disabled\"], [1, \"px-6\", \"py-2\", \"rounded\", \"text-white\", \"font-medium\", \"transition\", \"bg-cyan-600\", \"hover:bg-cyan-700\", \"disabled:bg-gray-300\", \"disabled:cursor-not-allowed\", \"disabled:text-gray-500\", \"cursor-pointer\", 3, \"click\"], [\"class\", \"p-3 rounded mb-4 max-w-3xl mx-auto mt-10 bg-slate-50 p-6 rounded shadow text-sm\", 3, \"ngClass\", 4, \"ngIf\"], [\"class\", \"max-w-3xl mx-auto mt-10 bg-slate-50 p-6 rounded shadow text-sm\", 4, \"ngIf\"], [1, \"p-3\", \"rounded\", \"mb-4\", \"max-w-3xl\", \"mx-auto\", \"mt-10\", \"bg-slate-50\", \"p-6\", \"rounded\", \"shadow\", \"text-sm\", 3, \"ngClass\"], [1, \"max-w-3xl\", \"mx-auto\", \"mt-10\", \"bg-slate-50\", \"p-6\", \"rounded\", \"shadow\", \"text-sm\"], [1, \"text-lg\", \"font-semibold\", \"text-slate-800\", \"mb-2\"], [1, \"mb-1\"], [1, \"bg-white\", \"border\", \"px-2\", \"py-1\", \"rounded\"], [1, \"mb-2\"], [1, \"bg-white\", \"border\", \"p-2\", \"rounded\", \"text-slate-700\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\", \"text-sm\", \"font-mono\", \"overflow-x-auto\", \"text-white\", \"mb-4\"], [1, \"mb-1\", \"font-medium\", \"text-white\"], [1, \"mt-4\", \"bg-slate-800\", \"text-white\", \"px-4\", \"py-2\", \"rounded\", \"hover:bg-slate-900\", 3, \"click\"], [\"class\", \"mt-4 bg-white border p-2 rounded text-green-700\", 4, \"ngIf\"], [1, \"mt-4\", \"bg-white\", \"border\", \"p-2\", \"rounded\", \"text-green-700\"]],\n      template: function MockBuilderComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n          i0.ɵɵtext(2, \"Crear nuevo Mock\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function MockBuilderComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.crearMock();\n          });\n          i0.ɵɵelementStart(4, \"div\", 3)(5, \"input\", 4);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function MockBuilderComponent_Template_input_ngModelChange_5_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.nuevoMock.name, $event) || (ctx.nuevoMock.name = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"select\", 5);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function MockBuilderComponent_Template_select_ngModelChange_6_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.nuevoMock.method, $event) || (ctx.nuevoMock.method = $event);\n            return $event;\n          });\n          i0.ɵɵelementStart(7, \"option\");\n          i0.ɵɵtext(8, \"GET\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"option\", 6);\n          i0.ɵɵtext(10, \"POST\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"option\", 6);\n          i0.ɵɵtext(12, \"PUT\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"option\", 6);\n          i0.ɵɵtext(14, \"DELETE\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"input\", 7);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function MockBuilderComponent_Template_input_ngModelChange_15_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.nuevoMock.path, $event) || (ctx.nuevoMock.path = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"textarea\", 8);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function MockBuilderComponent_Template_textarea_ngModelChange_16_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.nuevoMock.response, $event) || (ctx.nuevoMock.response = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"div\", 9)(18, \"button\", 10);\n          i0.ɵɵtext(19);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"button\", 11);\n          i0.ɵɵlistener(\"click\", function MockBuilderComponent_Template_button_click_20_listener() {\n            return ctx.irALista();\n          });\n          i0.ɵɵtext(21, \" Ver Lista de Mocks \");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵtemplate(22, MockBuilderComponent_div_22_Template, 2, 6, \"div\", 12)(23, MockBuilderComponent_div_23_Template, 22, 8, \"div\", 13);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.mockForm);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.nuevoMock.name);\n          i0.ɵɵadvance();\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.nuevoMock.method);\n          i0.ɵɵadvance(9);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.nuevoMock.path);\n          i0.ɵɵadvance();\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.nuevoMock.response);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.mockForm.invalid);\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate1(\" \", ctx.mockForm.invalid ? \"Completa el formulario\" : \"Crear Mock\", \" \");\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.alerta);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.mockCreado);\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName, i4.JsonPipe]\n    });\n  }\n  return MockBuilderComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}